generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Restaurant {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  tables   String[]
  menu     String[]
  orders   String[]
  location String

  @@map("restaurants")
}

model Table {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  tableId      String
  description  String?
  restaurantId String
  qrData       String
 version      Int @map("__v")

  @@map("tables")
}

model Order {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  items      String[]
  table      String
  totalPrice Float

  @@map("orders")
}
model Orderlog {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  userid     String
  table      String
  items      OrderItem[] @relation("OrderItemsOnOrderlog")
  totalPrice Float
  createdAt  DateTime
  orderType  String
  resId      String @db.ObjectId
  rating     String @db.ObjectId

  @@map("orderlogs")
}

model User {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  email            String  @unique
  password         String
  mobileNumber     String  @unique
  restaurantVisits String[]

  @@map("users")
}

model Admin {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  email          String  @unique
  password       String
  phoneNumber    String  @unique
  location       String?
  registeredDate DateTime?
  restaurant_name String?
  restaurant_id   String?  @db.ObjectId
  role           String

  @@map("admins")
}

model Rating {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  orderId     String  @db.ObjectId
  totalRating Float
  quality     Int
  service     Int
  pricing     Int
  createdAt   DateTime
  resId       String  @db.ObjectId
  version      Int @map("__v")

  @@map("ratings")
}

model MenuItem {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  description   String?
  isVeg         Boolean @db.Bool
  halfPrice     Float
  fullPrice     Float
  specialItems  String[]
  category      String
  prepTime      Int

  @@map("menuitems")
}

model Requests {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  tableId      String
  description  String?
  restaurantId String
  version      Int? @map("__v")

  @@map("requests")
}

model Notification {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  eventName    String
  description  String
  time         DateTime   @default(now())
  read         Boolean    @default(false)
  restaurantId String

  @@map("notifications")
}

model OrderItem {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String?
  price    Float?
  quantity Int?
  orderlog Orderlog? @relation("OrderItemsOnOrderlog", fields: [orderlogId], references: [id]) // âœ… Correct relation
  orderlogId String? @db.ObjectId

  @@map("orderitems")
}